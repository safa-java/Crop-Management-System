package com.agcltr.cart.service;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;

import com.agcltr.cart.external.CropServiceFeignClient;
import com.agcltr.cart.external.UserServiceFeignClient;
import com.agcltr.cart.repo.CartRepository;
import com.agcltr.cart.entity.Cart;
import com.agcltr.cart.entity.CartItem;
import com.agcltr.cart.entity.Crops;
import com.agcltr.cart.entity.User;
import com.agcltr.cart.exception.CartNotFoundException;



@Service
public class CartServiceImpl implements CartService{
	
    @Autowired
    private CropServiceFeignClient cropServiceFeignClient;
    
    @Autowired
    private UserServiceFeignClient userServiceFeignClient;
    
    @Autowired
    private CartRepository crepo;
    
    
   
    @Override
    public List<Cart> getCartItems() {
        return crepo.findAll();
    }
    


   @Override
    public Cart addToCart(String cropId, String userName, int quantity) {
        Crops crop = cropServiceFeignClient.getCropById(cropId);
        User user = userServiceFeignClient.fetchByEmail(userName);
        
        Cart userCart = crepo.findByUserName(user.getUserEmail());
        if (userCart == null) {
            userCart = new Cart();
            String cartId = UUID.randomUUID().toString();
            userCart.setId(cartId);
            userCart.setUserName(userName);
            
            }
        CartItem cartItem = crepo.findCartItemByItemsCropId(cropId);

        if (cartItem != null) {
            cartItem.setQuantity(cartItem.getQuantity() + quantity);
        } else {
            
            cartItem = new CartItem(cropId, crop.getCropName(), quantity, crop.getPricePerKg());
            userCart.getItems().add(cartItem);
            
        }
        crepo.save(userCart);
        return userCart;
       
       
        
    }

    
    
    // Remove an item from the cart
    public void removeFromCart(String cropId, int quantity) {
        Crops crop = cropServiceFeignClient.getCropById(cropId);
        
        
    }

    public double calculateTotalCost(Cart cart) {
       
    	double total = 0.0;
		for(CartItem item: cart.getItems()) {
			total += item.getSubtotal();
		}
		return total;
    }

    @Override
	public Cart viewCart(String id) throws CartNotFoundException {
		
		Optional<Cart> c = crepo.findById(id);
		if(c.isEmpty()) {
			throw new CartNotFoundException("Cart does not exists");
		}
		Cart cart = c.get();
		return cart;
	}


    @Override
	public String deleteCart(String id) throws CartNotFoundException {
		
		Optional<Cart> c = crepo.findById(id);
		if(c.isEmpty()) {
			throw new CartNotFoundException("Cart does not exists");
		}
		
		crepo.deleteById(id);
		return "Cart successfully deleted";
	}
    
    @Override
	public Cart viewByUsername(String username) throws CartNotFoundException {
		
		Cart cart= crepo.findByUserName(username);
		if(cart!=null) {
			return cart;
		}
		throw new CartNotFoundException("Cart does not exists");
	}








	
}

	


